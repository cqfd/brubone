#! /usr/bin/env python

import jinja2
import os
import requests
import shutil
import sys
import uuid

ROOT = os.path.join(os.path.dirname(__file__), '../')

SCRIPTS = {
    'backbone' : 'http://documentcloud.github.com/backbone/backbone.js',
    'backbone-min' : 'http://documentcloud.github.com/backbone/backbone-min.js',
    'underscore' : 'http://documentcloud.github.com/underscore/underscore.js',
    'underscore-min' : 'http://documentcloud.github.com/underscore/underscore-min.js',
    'jquery' : 'http://code.jquery.com/jquery-1.7.1.js',
    'jquery-min' : 'http://code.jquery.com/jquery-1.7.1.min.js'
}

def install_dependencies(path):
    print "Fetching backbone dependencies..."
    script_dirpath = os.path.join(path, 'static/js')
    for name, link in SCRIPTS.items():
        r = requests.get(link)
        script_path = os.path.join(script_dirpath, '%s.js' % name)
        f = open(script_path, 'w')
        f.write(r.content)
        f.close()

def create_project_skeleton(path):
    print "Creating project directory..."

    try:
        shutil.copytree(os.path.join(ROOT, 'skeleton'), path)
    except OSError:
        print "Aborting: There's already a %r directory!" % path
        exit(1)

def templatize_skeleton(dir_path, context):
    for dpath, dnames, fnames in os.walk(dir_path):
        for f in fnames:
            fpath = os.path.join(dpath, f)
            templatize(fpath, context)

def templatize(path, context):
    f = open(path, 'r')
    text = f.read()
    f.close()
    template = jinja2.Template(text)
    f = open(path, 'w')
    output = template.render(**context)
    f.write(output)
    f.close()

def create_new_project(project):
    template_context = {
        'project' : project,
        'handler_uuid' : str(uuid.uuid4()),
        'server_uuid' : str(uuid.uuid4())
    }
    project_dirpath = os.path.join(os.getcwd(), project)

    create_project_skeleton(project_dirpath)
    templatize_skeleton(project_dirpath, template_context)
    install_dependencies(project_dirpath)

    print "Happy hacking!"

if __name__ == '__main__':
    project = sys.argv[1]
    create_new_project(project)
